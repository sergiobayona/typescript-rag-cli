name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering

jobs:
  test:
    name: Test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['16', '18']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if package-lock.json exists
      - name: Check for package-lock.json
        id: check-lockfile
        run: |
          if [ -f "package-lock.json" ]; then
            echo "lockfile=true" >> $GITHUB_OUTPUT
          else
            echo "lockfile=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: ${{ steps.check-lockfile.outputs.lockfile == 'true' && 'npm' || '' }}

      - name: Install dependencies
        # Use npm ci if lock file exists, otherwise use npm install
        run: |
          if [ "${{ steps.check-lockfile.outputs.lockfile }}" == "true" ]; then
            npm ci
          else
            npm install
          fi
        shell: bash

      - name: Lint
        run: npm run lint -- --max-warnings=0
        if: runner.os != 'Windows'  # Skip on Windows due to different quoting rules

      - name: Lint (Windows)
        run: npx eslint src/**/*.ts --max-warnings=0
        if: runner.os == 'Windows'  # Windows-specific command

      - name: Build
        run: npm run build

      - name: Test
        run: npm test
        # No OpenAI API key needed as tests use mocks

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if package-lock.json exists
      - name: Check for package-lock.json
        id: check-lockfile
        run: |
          if [ -f "package-lock.json" ]; then
            echo "lockfile=true" >> $GITHUB_OUTPUT
          else
            echo "lockfile=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: ${{ steps.check-lockfile.outputs.lockfile == 'true' && 'npm' || '' }}

      - name: Install dependencies
        # Use npm ci if lock file exists, otherwise use npm install
        run: |
          if [ "${{ steps.check-lockfile.outputs.lockfile }}" == "true" ]; then
            npm ci
          else
            npm install
          fi
        shell: bash

      - name: Generate coverage report
        run: npm test -- --coverage
        # No OpenAI API key needed as tests use mocks

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3 